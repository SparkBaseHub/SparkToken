policy_module(spark, 1.100.1)

########################################
#
# Declarations
#

type spark_t;
type spark_exec_t;
init_daemon_domain(spark_t, spark_exec_t)

permissive spark_t;

type spark_initrc_exec_t;
init_script_file(spark_initrc_exec_t)

type spark_conf_t;
files_type(spark_conf_t)

type spark_var_lib_t;
files_type(spark_var_lib_t)

type spark_var_run_t;
files_type(spark_var_run_t)

type spark_port_t;
corenet_port(spark_port_t)

########################################
#
# spark local policy
#
allow spark_t self:process { fork };

allow spark_t self:fifo_file rw_fifo_file_perms;
allow spark_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(spark_t, spark_conf_t, spark_conf_t)
manage_files_pattern(spark_t, spark_conf_t, spark_conf_t)

manage_dirs_pattern(spark_t, spark_var_lib_t, spark_var_lib_t)
manage_files_pattern(spark_t, spark_var_lib_t, spark_var_lib_t)
files_var_lib_filetrans(spark_t, spark_var_lib_t, { dir file })

manage_dirs_pattern(spark_t, spark_var_run_t, spark_var_run_t)
manage_files_pattern(spark_t, spark_var_run_t, spark_var_run_t)

sysnet_dns_name_resolve(spark_t)
corenet_all_recvfrom_unlabeled(spark_t)

allow spark_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(spark_t)
corenet_tcp_sendrecv_generic_node(spark_t)
corenet_tcp_sendrecv_all_ports(spark_t)
corenet_tcp_bind_generic_node(spark_t)

gen_require(`
    type spark_port_t;
')
allow spark_t spark_port_t:tcp_socket name_bind;

gen_require(`
    type spark_port_t;
')
allow spark_t spark_port_t:tcp_socket name_connect;

domain_use_interactive_fds(spark_t)

files_read_etc_files(spark_t)

miscfiles_read_localization(spark_t)

sysnet_dns_name_resolve(spark_t)

allow spark_t spark_exec_t:file execute_no_trans;
allow spark_t self:process setsched;
corecmd_exec_ls(spark_t)
corenet_tcp_connect_http_port(spark_t)
dev_read_urand(spark_t)
fs_getattr_xattr_fs(spark_t)
kernel_read_system_state(spark_t)
